{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport Home from \"./screens/Home\";\nimport Details from \"./screens/Details\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: 'transparent'\n  })\n});\n\nvar _require = require('googleapis'),\n    google = _require.google;\n\nvar client = new google.auth.JWT(process.env.API_EMAIL, null, process.env.API_PRIVATE, ['https://www.googleapis.com/auth/spreadsheets']);\nclient.authorize(function (err, tokens) {\n  if (err) {\n    console.log('ERROR!');\n    console.log(err);\n    return;\n  } else {\n    console.log('connected!');\n  }\n});\n\nvar App = function App() {\n  var _useFonts = useFonts({\n    LatoBlack: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Black.ttf\"),\n    LatoHeavy: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Heavy.ttf\"),\n    LatoBold: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Bold.ttf\"),\n    LatoSemibold: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Semibold.ttf\"),\n    LatoMedium: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Medium.ttf\"),\n    LatoLight: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Light.ttf\"),\n    LatoRegular: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) return null;\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Details\n      })]\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"names":["createStackNavigator","NavigationContainer","DefaultTheme","useFonts","Home","Details","Stack","theme","colors","background","require","google","client","auth","JWT","process","env","API_EMAIL","API_PRIVATE","authorize","err","tokens","console","log","App","LatoBlack","LatoHeavy","LatoBold","LatoSemibold","LatoMedium","LatoLight","LatoRegular","loaded","headerShown"],"sources":["/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/App.js"],"sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\n\nimport Home from './screens/Home'\nimport Details from './screens/Details'\n\nconst Stack = createStackNavigator();\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: 'transparent',\n\n  }\n}\n\nconst { google } = require('googleapis');\nconst client = new google.auth.JWT(\n  process.env.API_EMAIL,\n  null,\n  process.env.API_PRIVATE,\n  ['https://www.googleapis.com/auth/spreadsheets']\n);\nclient.authorize(function (err, tokens) {\n  if (err) {\n    console.log('ERROR!');\n    console.log(err);\n    return;\n  }\n  else {\n    console.log('connected!')\n  }   \n});\n\nconst App = () => {\n  const [loaded] = useFonts({\n    LatoBlack: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Black.ttf\"),\n    LatoHeavy: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Heavy.ttf\"),\n    LatoBold: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Bold.ttf\"),\n    LatoSemibold: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Semibold.ttf\"),\n    LatoMedium: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Medium.ttf\"),\n    LatoLight: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Light.ttf\"),\n    LatoRegular: require(\"/Users/griffinclark/Documents/Queens/ENPH/ENPH454/Code/QueueHop/QueueHop/assets/fonts/Lato-Regular.ttf\"),\n  });\n  if (!loaded) return null;\n\n  return (\n    <NavigationContainer theme={theme}>\n      <Stack.Navigator screenOptions={{ headerShown:false }} initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={ Home }/>\n        <Stack.Screen name=\"Details\" component={ Details }/>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"],"mappings":";;;;;;;AAAA,SAASA,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;;;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;AACA,IAAMO,KAAK,mCACNL,YADM;EAETM,MAAM,kCACDN,YAAY,CAACM,MADZ;IAEJC,UAAU,EAAE;EAFR;AAFG,EAAX;;AASA,eAAmBC,OAAO,CAAC,YAAD,CAA1B;AAAA,IAAQC,MAAR,YAAQA,MAAR;;AACA,IAAMC,MAAM,GAAG,IAAID,MAAM,CAACE,IAAP,CAAYC,GAAhB,CACbC,OAAO,CAACC,GAAR,CAAYC,SADC,EAEb,IAFa,EAGbF,OAAO,CAACC,GAAR,CAAYE,WAHC,EAIb,CAAC,8CAAD,CAJa,CAAf;AAMAN,MAAM,CAACO,SAAP,CAAiB,UAAUC,GAAV,EAAeC,MAAf,EAAuB;EACtC,IAAID,GAAJ,EAAS;IACPE,OAAO,CAACC,GAAR,CAAY,QAAZ;IACAD,OAAO,CAACC,GAAR,CAAYH,GAAZ;IACA;EACD,CAJD,MAKK;IACHE,OAAO,CAACC,GAAR,CAAY,YAAZ;EACD;AACF,CATD;;AAWA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,gBAAiBrB,QAAQ,CAAC;IACxBsB,SAAS,EAAEf,OAAO,CAAC,sGAAD,CADM;IAExBgB,SAAS,EAAEhB,OAAO,CAAC,sGAAD,CAFM;IAGxBiB,QAAQ,EAAEjB,OAAO,CAAC,qGAAD,CAHO;IAIxBkB,YAAY,EAAElB,OAAO,CAAC,yGAAD,CAJG;IAKxBmB,UAAU,EAAEnB,OAAO,CAAC,uGAAD,CALK;IAMxBoB,SAAS,EAAEpB,OAAO,CAAC,sGAAD,CANM;IAOxBqB,WAAW,EAAErB,OAAO,CAAC,wGAAD;EAPI,CAAD,CAAzB;EAAA;EAAA,IAAOsB,MAAP;;EASA,IAAI,CAACA,MAAL,EAAa,OAAO,IAAP;EAEb,OACE,KAAC,mBAAD;IAAqB,KAAK,EAAEzB,KAA5B;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,aAAa,EAAE;QAAE0B,WAAW,EAAC;MAAd,CAAhC;MAAuD,gBAAgB,EAAC,MAAxE;MAAA,WACE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,MAAnB;QAA0B,SAAS,EAAG7B;MAAtC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,SAAnB;QAA6B,SAAS,EAAGC;MAAzC,EAFF;IAAA;EADF,EADF;AAQD,CApBD;;AAsBA,eAAemB,GAAf"},"metadata":{},"sourceType":"module"}